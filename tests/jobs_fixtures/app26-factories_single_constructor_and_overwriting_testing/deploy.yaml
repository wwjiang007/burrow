jobs:

- name: setStorageBase
  set:
      val: 5

- name: setStorageBase2
  set:
      val: 17

- name: deployGSFactory
  deploy:
      contract: GSFactory.sol
      instance: GSFactory

- name: deployGSABIFactory
  deploy:
      contract: GSContract.sol
      instance: GSContract

- name: createGSContract
  call:
      destination: $deployGSFactory
      function: create 
      data:
        - $setStorageBase
      bin: $deployGSFactory

# Double check created address
- name:  getGSAddr
  query-contract:
      destination: $deployGSFactory
      function: getLast
      bin: $deployGSFactory

- name: assertAddr
  assert:
      key: $getGSAddr
      relation: eq
      val: $createGSContract

# Test initialized value from construction is equal to setStorageBase
- name: queryStorage
  query-contract:
      destination: $createGSContract
      function: get
      bin: $deployGSABIFactory

- name: assertStorage
  assert:
      key: $queryStorage
      relation: eq
      val: $setStorageBase

# Set a new value to ensure constructors can be overwritten
- name: setStorage
  call:
      destination: $createGSContract
      function: set 
      data:
        - $setStorageBase2
      bin: $deployGSABIFactory

- name: queryStorageNew
  query-contract:
      destination: $createGSContract
      function: get
      bin: $deployGSABIFactory

- name: assertStorageNew
  assert:
      key: $queryStorageNew
      relation: eq
      val: $setStorageBase2
